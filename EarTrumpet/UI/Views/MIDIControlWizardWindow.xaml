<Window x:Class="EarTrumpet.UI.Views.MIDIControlWizardWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        
        xmlns:local="clr-namespace:EarTrumpet.UI.Views"
        mc:Ignorable="d"
        Title="{x:Static resx:Resources.MIDIControlWizardText}" Height="453.668" Width="351">
    <Grid Margin="0,0,-8,0">
        <ComboBox HorizontalAlignment="Left" Height="23" Margin="10,92,0,0" VerticalAlignment="Top" Width="313" RenderTransformOrigin="0.497,0.5" ItemsSource="{Binding CapturedMidiInControls}" SelectedIndex="{Binding CapturedMidiInControlsSelected}" IsSynchronizedWithCurrentItem="True" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" Background="#FFE4E4E4" Style="{DynamicResource {x:Type ItemsControl}}">
        </ComboBox>
        <TextBlock TextWrapping="WrapWithOverflow" Margin="10,10,10,0" Height="77" VerticalAlignment="Top">
        Move / press the hardware control element to be used. -> Captured changes are listed in the table below. -> Select the control to be assigned.
        </TextBlock>
        <ProgressBar HorizontalAlignment="Left" Height="26" Margin="162,337,0,0" VerticalAlignment="Top" Width="164" Value="{Binding LiveValue}" Name="LiveValueProgressBar"/>
        <TextBlock Text="{Binding ElementName=LiveValueProgressBar, Path=Value, StringFormat={}{0:0} %}" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.491,0.515" Margin="225,342,73,0" Width="53" TextAlignment="Center" Height="17" />
        <Label Content="Live Value:" HorizontalAlignment="Left" Margin="10,337,0,0" VerticalAlignment="Top"/>
        <Label Content="Max:" HorizontalAlignment="Left" Margin="10,255,0,0" VerticalAlignment="Top"/>
        <Label Content="Min:" HorizontalAlignment="Left" Margin="10,224,0,0" VerticalAlignment="Top"/>
        <Button Content="Save" HorizontalAlignment="Left" Margin="248,382,0,0" VerticalAlignment="Top" Width="75" Command="{Binding SaveMidiControlCommand}" Style="{DynamicResource {x:Type ContentControl}}"/>
        <TextBlock TextWrapping="WrapWithOverflow" Margin="10,10,10,0" Height="77" VerticalAlignment="Top"><Run Text="Move / press the hardware control element to be used. -&gt; Captured changes are listed in the table below. -&gt; Select the control to be assigned."/></TextBlock>
        <TextBlock TextWrapping="WrapWithOverflow" Margin="10,146,10,0" Height="77" VerticalAlignment="Top"><Run Text="Set the selected control to the min. value (or released state for buttons) and click 'Set Min'. Then set the selected control to the max. value (or pressed state for buttons) and click 'Set Max' (hold button until clicked)."/></TextBlock>
        <Button Content="Set Min" HorizontalAlignment="Left" Margin="162,228,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource {x:Type ContentControl}}" Command="{Binding SetMinValueCommand}"/>
        <Button Content="Set Max" HorizontalAlignment="Left" Margin="162,258,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource {x:Type ContentControl}}" Command="{Binding SetMaxValueCommand}"/>
        <Label Content="Scaling:&#xD;&#xA;" HorizontalAlignment="Left" Margin="10,289,0,0" VerticalAlignment="Top" Width="85" Height="26"/>
        <Slider Name ="ScalingValueSlider" HorizontalAlignment="Left" Margin="162,289,0,0" VerticalAlignment="Top" Style="{DynamicResource {x:Type Slider}}" RenderTransformOrigin="0.583,0.51" Width="161" Minimum="0" Maximum="1" TickFrequency="0.01" Value="{Binding ScalingValue}"/>
        <TextBlock Text="{Binding Value, ElementName=ScalingValueSlider, StringFormat=\{0:F2\}}" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.491,0.515" Margin="219,308,79,0" Width="53" TextAlignment="Center" Height="17" />

    </Grid>
</Window>
