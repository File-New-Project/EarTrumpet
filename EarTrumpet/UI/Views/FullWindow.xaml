<Window x:Class="EarTrumpet.UI.Views.FullWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        xmlns:views="clr-namespace:EarTrumpet.UI.Views"
        Name="WindowRoot"
        Title="{x:Static resx:Resources.FullWindowTitleText}"
        SizeToContent="WidthAndHeight"
        Style="{DynamicResource FullWindowDialogWindowStyle}"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>

        <Style x:Key="FullWindowDialogWindowStyle"
               BasedOn="{StaticResource DialogWindowStyle}"
               TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ResizeMode" Value="NoResize" />
        </Style>

        <Style x:Key="DeviceHeaderGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="DeviceHeaderBackgroundBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="AppListStyle"
               BasedOn="{StaticResource BaseAppListStyle}"
               TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="AppListBorderStyle"
               BasedOn="{StaticResource BaseAppListBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource NormalWindowBackground}" />
        </Style>

        <Style x:Key="VolumeControlPopupBorder"
               BasedOn="{StaticResource BaseVolumeControlPopupBorder}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource NormalWindowBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorder}" />
        </Style>

        <Style x:Key="VirtualTitleBarBorderStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource FullWindowDeviceBackground}" />
        </Style>

        <Style x:Key="VirtualTitleBarButtonStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarButtonStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource VirtualTitleBarButtonHover}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PerThemeGlyphTextBlockStyle"
               BasedOn="{StaticResource GlyphTextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="VirtualTitleBarTextStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="PerThemeTextBlockStyle"
               BasedOn="{StaticResource TextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="DeviceVolumeTextStyle"
               BasedOn="{StaticResource BaseDeviceVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="AppVolumeTextStyle"
               BasedOn="{StaticResource BaseAppVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="DeviceTitleTextStyle"
               BasedOn="{StaticResource BaseDeviceTitleTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <ControlTemplate x:Key="VolumeSliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Border Name="TrackBackground" Height="2" />

                <Track Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Name="SliderLeft"
                                      Command="Slider.DecreaseLarge"
                                      Foreground="{DynamicResource SliderTrackFillLeft}"
                                      Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Name="SliderThumb">
                            <Thumb.Style>
                                <Style BasedOn="{StaticResource SliderThumbStyle}" TargetType="{x:Type Thumb}">
                                    <Setter Property="Foreground" Value="{DynamicResource ControlSliderTrackFillRest}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                                            <Setter Property="Foreground" Value="{DynamicResource ControlSliderThumbHover}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Name="SliderRight"
                                      Command="Slider.IncreaseLarge"
                                      Foreground="{DynamicResource ControlSliderTrackFillRight}"
                                      Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <Border Name="PeakMeter1"
                        Height="2"
                        Margin="0,-2,0,0"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource NormalWindowForeground}" />

                <Border Name="PeakMeter2"
                        Height="2"
                        Margin="0,1,0,0"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource NormalWindowForeground}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="VolumeSliderStyle"
               BasedOn="{StaticResource BaseVolumeSliderStyle}"
               TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{DynamicResource VolumeSliderTemplate}" />
        </Style>

        <Style x:Key="{x:Type ListViewItem}"
               BasedOn="{StaticResource BaseListViewItemStyle}"
               TargetType="ListViewItem" />
    </Window.Resources>

    <Grid>
        <Border Name="AcrylicBackgroundActive" Background="{DynamicResource ChromeBlackMedium}" />

        <Border Name="AcrylicBackgroundInactive">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="{DynamicResource AcrylicWindowBackdropFallback}" />
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="True" />
                                <Condition Binding="{Binding ElementName=WindowRoot, Path=IsActive}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOff" />
                                <BeginStoryboard Name="IsActive_Enter_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOff" />
                                <BeginStoryboard Name="IsActive_Exit_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="False" />
                                <Condition Binding="{Binding ElementName=WindowRoot, Path=IsActive}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOn" />
                                <BeginStoryboard Name="IsActive_Enter_AnimationsOff">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOn" />
                                <BeginStoryboard Name="IsActive_Exit_AnimationsOff">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <DockPanel x:Name="ContentRoot">
            <DockPanel DockPanel.Dock="Top">
                <Button x:Name="CloseButton"
                        Click="CloseButton_Click"
                        Content="&#xE8BB;"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource CloseButtonStyle}" />
                <TextBlock Padding="20,8,20,8"
                           DockPanel.Dock="Left"
                           Text="{Binding ElementName=WindowRoot, Path=Title}"
                           TextAlignment="Left" />
            </DockPanel>
            <Grid>
                <ScrollViewer x:Name="BaseVisual"
                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                              ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ItemsControl IsTabStop="False" ItemsSource="{Binding AllDevices}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <ItemContainerTemplate>
                                <views:DeviceAndAppsControl Width="{StaticResource WindowAndItemSize}"
                                                            AppExpanded="DeviceAndAppsControl_AppExpanded"
                                                            Device="{Binding}" />
                            </ItemContainerTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

                <views:VolumeControlPopup x:Name="AppPopup" DataContext="{x:Null}" />
            </Grid>
        </DockPanel>

        <Border Name="LightDismissBorder"
                Background="{DynamicResource NormalWindowBackground}"
                PreviewMouseDown="LightDismissBorder_PreviewMouseDown">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsShowingModalDialog}" Value="True" />
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOff" />
                                <BeginStoryboard Name="EnterLightDismiss_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00.15" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOff" />
                                <BeginStoryboard Name="ExitLightDismiss_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00.15" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.15" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsShowingModalDialog}" Value="True" />
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOn" />
                                <BeginStoryboard Name="EnterLightDismiss_AnimationsOff">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOn" />
                                <BeginStoryboard Name="ExitLightDismiss_AnimationsOff">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border Margin="0,0,0,14" Opacity="0.8">
                <Border.Effect>
                    <BlurEffect KernelType="Gaussian"
                                Radius="{StaticResource WindowBlurRadius}"
                                RenderingBias="Performance" />
                </Border.Effect>
                <Border.Background>
                    <VisualBrush AlignmentX="Left"
                                 AlignmentY="Top"
                                 Stretch="UniformToFill"
                                 Visual="{Binding ElementName=ContentRoot}" />
                </Border.Background>
            </Border>
        </Border>
    </Grid>
</Window>
