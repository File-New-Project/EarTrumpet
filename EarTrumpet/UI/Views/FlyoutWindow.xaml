<Window x:Class="EarTrumpet.UI.Views.FlyoutWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:clr="clr-namespace:System;assembly=mscorlib"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        xmlns:views="clr-namespace:EarTrumpet.UI.Views"
        Title="EarTrumpet"
        Width="{StaticResource WindowAndItemSize}"
        AllowsTransparency="True"
        Background="Transparent"
        Foreground="{DynamicResource WindowForeground}"
        Icon="pack://application:,,,/Assets/Application.ico"
        PreviewKeyDown="Window_PreviewKeyDown"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Display"
        UseLayoutRounding="True"
        WindowStyle="None">
    <Window.Resources>
        <clr:String x:Key="ContextMenuTheme">DarkOnly</clr:String>

        <Style x:Key="DeviceHeaderGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{DynamicResource HeaderBackground}" />
        </Style>

        <Style x:Key="DeviceHeaderBackgroundBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource HeaderBackground2}" />
        </Style>

        <Style x:Key="AppListStyle"
               BasedOn="{StaticResource BaseAppListStyle}"
               TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="AppListBorderStyle"
               BasedOn="{StaticResource BaseAppListBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        </Style>

        <Style x:Key="VolumeControlPopupBorder"
               BasedOn="{StaticResource BaseVolumeControlPopupBorder}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource PopupBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorder}" />
        </Style>

        <Style x:Key="VirtualTitleBarBorderStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource HeaderBackground}" />
        </Style>

        <Style x:Key="Windows10FocusVisualStyleDarkOnly">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Rectangle Stroke="{DynamicResource SecondaryDarkFocusVisual}" StrokeThickness="3" />
                            <Rectangle Stroke="{DynamicResource WindowForeground}" StrokeThickness="2" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VirtualTitleBarButtonStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarButtonStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyleDarkOnly}" />
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="#22FFFFFF" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VirtualTitleBarTextStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <Style x:Key="PerThemeGlyphTextBlockStyle"
               BasedOn="{StaticResource GlyphTextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <Style x:Key="PerThemeTextBlockStyle"
               BasedOn="{StaticResource TextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <Style x:Key="DeviceVolumeTextStyle"
               BasedOn="{StaticResource BaseDeviceVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <Style x:Key="AppVolumeTextStyle"
               BasedOn="{StaticResource BaseAppVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <Style x:Key="DeviceTitleTextStyle"
               BasedOn="{StaticResource BaseDeviceTitleTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        </Style>

        <ControlTemplate x:Key="VolumeSliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Border Name="TrackBackground" Height="2" />

                <Track Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Name="SliderLeft"
                                      Command="Slider.DecreaseLarge"
                                      Foreground="{DynamicResource SliderTrackFillLeft}"
                                      Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Name="SliderThumb"
                               Foreground="{DynamicResource CottonSwabSliderThumb}"
                               Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Name="SliderRight"
                                      Command="Slider.IncreaseLarge"
                                      Foreground="{DynamicResource SliderTrackFillRight}"
                                      Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <Border Name="PeakMeter1"
                        Height="2"
                        Margin="0,-2,0,0"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource PeakMeterHotColor}" />

                <Border Name="PeakMeter2"
                        Height="2"
                        Margin="0,1,0,0"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource PeakMeterHotColor}" />

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" To="Normal" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderThumb" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource CottonSwabSliderThumbHover}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderThumb" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource CottonSwabSliderThumbPressed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="VolumeSliderStyle"
               BasedOn="{StaticResource BaseVolumeSliderStyle}"
               TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{StaticResource VolumeSliderTemplate}" />
        </Style>

        <Style x:Key="ExpandCollapseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource Windows10FocusVisualStyleDarkOnly}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#22FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="CanContentScroll" Value="True" />
            <Setter Property="PanningMode" Value="VerticalOnly" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style x:Key="{x:Type ListViewItem}"
               BasedOn="{StaticResource BaseListViewItemStyle}"
               TargetType="ListViewItem">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource Windows10FocusVisualStyleDarkOnly}" />
        </Style>

    </Window.Resources>
    <Grid x:Name="LayoutRoot">
        <ScrollViewer Name="BaseVisual">
            <Grid Name="ContentGrid" VerticalAlignment="Top">

                <Border Height="{StaticResource NoItemsPaneHeight}"
                        VerticalAlignment="Center"
                        Background="{DynamicResource WindowBackground}"
                        Visibility="{Binding IsEmpty, Converter={StaticResource visConverter}, ConverterParameter=Normal}">
                    <TextBlock x:Uid="NoDevicesPanelContent"
                               HorizontalAlignment="Center"
                               FontSize="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"
                               Text="{x:Static resx:Resources.NoDevicesPanelContent}"
                               TextWrapping="Wrap" />
                </Border>

                <Grid Visibility="{Binding IsEmpty, Converter={StaticResource visConverter}, ConverterParameter=Inverted}">
                    <ItemsControl Name="DevicesList"
                                  FocusVisualStyle="{x:Null}"
                                  IsTabStop="False"
                                  ItemsSource="{Binding Devices}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <views:DeviceAndAppsControl AppExpanded="DeviceAndAppsControl_AppExpanded" Device="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Button Height="{StaticResource DeviceTitleCellHeight}"
                            AutomationProperties.Name="{Binding ExpandAccessibleText}"
                            Command="{Binding ExpandCollapse}"
                            IsEnabled="{Binding CanExpand}"
                            Style="{StaticResource ExpandCollapseButtonStyle}">
                        <Button.Content>
                            <TextBlock Margin="{StaticResource WindowMargin}"
                                       HorizontalAlignment="Right"
                                       FontSize="12"
                                       Style="{StaticResource GlyphTextBlockStyle}"
                                       Text="{Binding ExpandText}" />
                        </Button.Content>
                    </Button>
                </Grid>
            </Grid>
        </ScrollViewer>
        <Border Name="LightDismissBorder"
                Background="{DynamicResource BlurBackground}"
                PreviewMouseDown="LightDismissBorder_PreviewMouseDown">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsShowingModalDialog}" Value="True" />
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOff" />
                                <BeginStoryboard Name="EnterLightDismiss_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00.15" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOff" />
                                <BeginStoryboard Name="ExitLightDismiss_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00.15" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.15" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsShowingModalDialog}" Value="True" />
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOn" />
                                <BeginStoryboard Name="EnterLightDismiss_AnimationsOff">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOn" />
                                <BeginStoryboard Name="ExitLightDismiss_AnimationsOff">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border Margin="0,0,0,14">
                <Border.Effect>
                    <BlurEffect KernelType="Gaussian"
                                Radius="{StaticResource WindowBlurRadius}"
                                RenderingBias="Performance" />
                </Border.Effect>
                <Border.Background>

                    <VisualBrush AlignmentX="Left"
                                 AlignmentY="Top"
                                 Stretch="UniformToFill"
                                 Visual="{Binding ElementName=BaseVisual}" />
                </Border.Background>
            </Border>
        </Border>

        <views:VolumeControlPopup x:Name="AppPopup" DataContext="{x:Null}" />
    </Grid>
</Window>
