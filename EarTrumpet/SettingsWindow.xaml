<Window x:Class="EarTrumpet.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        xmlns:uc="clr-namespace:EarTrumpet.UserControls"
        xmlns:mock="clr-namespace:EarTrumpet.ViewModels.Mocks"
        mc:Ignorable="d"
        Name="WindowRoot"
        WindowStyle="None"
        Icon="Tray.ico"
        ShowInTaskbar="True"
        AllowsTransparency="True"
        SizeToContent="Height"
        Foreground="{DynamicResource WindowForeground}"
        Background="Black"
        BorderThickness="1"
        Height="500"
        MinWidth="600"
        Width="600">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="31"
                      ResizeBorderThickness="4" />
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ActiveBorder}" />
            <Style.Triggers>
                <Trigger Property="IsActive"
                         Value="false">
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Style TargetType="Window">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ActiveBorder}" />
            <Style.Triggers>
                <Trigger Property="IsActive"
                         Value="false">
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeadingText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Margin" Value="4, 12" />
        </Style>
        <Style x:Key="BodyText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Margin" Value="4, 0, 12, 0" />
        </Style>
    </Window.Resources>
    <Grid d:DataContext="{d:DesignInstance Type=mock:SettingsViewModelMock, IsDesignTimeCreatable=True}" Background="{DynamicResource WindowBackground}">
        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock TextAlignment="Left"
                           Padding="16, 8, 20, 8"
                           Text="{Binding ElementName=WindowRoot,Path=Title}" />
                <Button x:Name="CloseButton"
                        Grid.Column="1"
                        Content="&#xE8BB;"
                        Style="{DynamicResource CloseButtonStyle}"
                        Click="CloseButton_Click" />
            </Grid>
            <StackPanel Orientation="Horizontal"
                        DockPanel.Dock="Bottom" />
            <StackPanel Orientation="Vertical" Margin="12,12,12,24">
                <TextBlock Text="{x:Static resx:Resources.SettingsTitle}" Style="{StaticResource HeadingText}" Margin="4,0,4,12" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center"
                               Text="{x:Static resx:Resources.HotkeyDescriptionText}"
                               Style="{StaticResource BodyText}"
                               Margin="4,0,12,0" />
                    <Button Click="HotkeySelect_Click"
                            Style="{StaticResource SlimButton}"
                            Foreground="{Binding ElementName=WindowRoot,Path=Foreground}"
                            Content="{Binding HotkeyText}" HorizontalAlignment="Left" />
                </StackPanel>
                <TextBlock Text="{x:Static resx:Resources.DiagnosticsTitle}" Style="{StaticResource HeadingText}" />
                <TextBlock Text="{x:Static resx:Resources.DiagnosticsText}" Style="{StaticResource BodyText}"/>
                <Button Content="{x:Static resx:Resources.TroubleshootEarTrumpetText}" HorizontalAlignment="Left" Style="{StaticResource SlimButton}" Foreground="{Binding ElementName=WindowRoot,Path=Foreground}" Command="{Binding OpenDiagnosticsCommand}" Margin="0,8,0,0"></Button>
                <TextBlock Text="{x:Static resx:Resources.AboutTitle}" Style="{StaticResource HeadingText}" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding AboutText}" Style="{StaticResource BodyText}" VerticalAlignment="Center"/>
                    <Button Content="{x:Static resx:Resources.WebsiteText}" Style="{StaticResource SlimButton}" Foreground="{Binding ElementName=WindowRoot,Path=Foreground}" Command="{Binding OpenAboutCommand}"></Button>
                </StackPanel>
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>
