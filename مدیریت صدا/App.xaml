<Application x:Class="EarTrumpet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:bcl="clr-namespace:System;assembly=mscorlib"
             xmlns:conv="clr-namespace:EarTrumpet.UI.Converters"
             xmlns:themes="clr-namespace:EarTrumpet.UI.Themes"
             xmlns:views="clr-namespace:EarTrumpet.UI.Views"
             xmlns:vm="clr-namespace:EarTrumpet.UI.ViewModels"
             xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UI\Themes\SystemThemeColors.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <themes:ThemeManager x:Key="ThemeManager" />

            <conv:InvertableVisibilityConverter x:Key="visConverter" />
            <conv:IconConverter x:Key="iconConverter" />
            <conv:OpacityConverter x:Key="opacityConverter"
                                   FalseOpacity="1.0"
                                   TrueOpacity="0.4" />

            <Thickness x:Key="PopupBorderThickness">1</Thickness>
            <bcl:Double x:Key="WindowBlurRadius">10</bcl:Double>
            <bcl:Double x:Key="WindowAndItemSize">360</bcl:Double>
            <bcl:Double x:Key="DeviceIconSize">24</bcl:Double>
            <bcl:Double x:Key="AppIconSize">24</bcl:Double>
            <win:GridLength x:Key="IconCellWidth">65</win:GridLength>
            <win:GridLength x:Key="VolumeCellWidth">63</win:GridLength>
            <bcl:Double x:Key="DeviceTitleCellHeight">44</bcl:Double>
            <bcl:Double x:Key="AppItemCellHeight">44</bcl:Double>
            <bcl:Double x:Key="DeviceItemCellHeight">54</bcl:Double>
            <bcl:Double x:Key="AppVolumeTextFontSize">18</bcl:Double>
            <bcl:Double x:Key="DeviceVolumeTextFontSize">24</bcl:Double>
            <bcl:Double x:Key="LargeWindowTextFontSize">15</bcl:Double>
            <Thickness x:Key="WindowMargin">12,0,12,0</Thickness>
            <Thickness x:Key="VolumeAppListMargin">0,6,0,6</Thickness>
            <Thickness x:Key="DeviceOrAppIconMargin">5,0,0,0</Thickness>
            <Thickness x:Key="VolumeTextMargin">-1,0,0,0</Thickness>
            <bcl:Double x:Key="NoItemsPaneHeight">50</bcl:Double>
            <Thickness x:Key="NoItemsPaneMargin">0,8</Thickness>
            <bcl:Double x:Key="SliderThumbWidth">8</bcl:Double>

            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontWeight" Value="ExtraLight" />
                <Setter Property="Width" Value="46" />
                <Setter Property="Height" Value="31" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Margin="0,-1,0,0"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter Margin="2"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CloseButtonStyle"
                   BasedOn="{StaticResource CaptionButtonStyle}"
                   TargetType="Button">
                <Setter Property="Margin" Value="0,1,0,0" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource LightOrDark_CloseButtonText}" />
                        <Setter Property="Background" Value="#FFE81123" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Windows10FocusVisualStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Rectangle Stroke="{DynamicResource LightOrDark_Background}" StrokeThickness="3" />
                                <Rectangle Stroke="{DynamicResource LightOrDark_Text}" StrokeThickness="2" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LargeWindows10FocusVisualStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Margin="-4" SnapsToDevicePixels="True">
                                <Rectangle Stroke="{DynamicResource LightOrDark_Background}" StrokeThickness="3" />
                                <Rectangle Stroke="{DynamicResource LightOrDark_Text}" StrokeThickness="2" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="14,0" />
                <Setter Property="Height" Value="32" />
                <Setter Property="MinWidth" Value="90" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Content}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundHover}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundPressed}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent">
                                <Border Height="2" Background="{TemplateBinding Foreground}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Width" Value="{StaticResource SliderThumbWidth}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="5" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseVolumeSliderStyle" TargetType="{x:Type Slider}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Minimum" Value="0" />
                <Setter Property="Maximum" Value="100" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Interval" Value="1" />
                <Setter Property="Height" Value="32" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="SmallChange" Value="1" />
                <Setter Property="LargeChange" Value="10" />
                <Setter Property="IsManipulationEnabled" Value="true" />
            </Style>

            <Style x:Key="{x:Type Slider}"
                   BasedOn="{StaticResource BaseVolumeSliderStyle}"
                   TargetType="{x:Type Slider}">
                <Setter Property="Template" Value="{DynamicResource LighOrDark_VolumeSliderTemplate}" />
            </Style>

            <Style x:Key="{x:Type ListView}" TargetType="ListView">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Background="{TemplateBinding Background}">
                                <ItemsPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Windows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GlyphTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            </Style>

            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>

            <Style x:Key="BaseDeviceVolumeTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="{StaticResource VolumeTextMargin}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{StaticResource DeviceVolumeTextFontSize}" />

            </Style>

            <Style x:Key="BaseAppVolumeTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="{StaticResource VolumeTextMargin}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{StaticResource AppVolumeTextFontSize}" />
            </Style>

            <Style x:Key="BaseDeviceTitleTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{StaticResource LargeWindowTextFontSize}" />
            </Style>

            <Style x:Key="BaseVirtualTitleBarBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Height" Value="{StaticResource DeviceTitleCellHeight}" />
            </Style>

            <Style x:Key="BaseVolumeControlPopupBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="{StaticResource PopupBorderThickness}" />
            </Style>

            <Style x:Key="BaseVirtualTitleBarTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="{StaticResource WindowMargin}" />
                <Setter Property="FontSize" Value="{StaticResource LargeWindowTextFontSize}" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="BaseVirtualTitleBarButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="{StaticResource DeviceTitleCellHeight}" />
                <Setter Property="Height" Value="{StaticResource DeviceTitleCellHeight}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Tag}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DialogWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="Background" Value="{DynamicResource LightOrDark_Background}" />
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Icon" Value="pack://application:,,,/مدیریت صدا;component/Assets/Tray.ico" />
                <Setter Property="ShowInTaskbar" Value="True" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="31" ResizeBorderThickness="4" />
                    </Setter.Value>
                </Setter>

                <Setter Property="BorderBrush" Value="{DynamicResource LightOrDark_ActiveWindowBorder}" />
                <Style.Triggers>
                    <Trigger Property="IsActive" Value="false">
                        <Setter Property="BorderBrush" Value="{DynamicResource LightOrDark_InactiveWindowBorder}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="BaseAppListStyle" TargetType="{x:Type ListView}">
                <Setter Property="Margin" Value="{StaticResource VolumeAppListMargin}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Background="{TemplateBinding Background}">
                                <ItemsPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseAppListBorderStyle" TargetType="{x:Type Border}" />

            <Style x:Key="BaseOverlayButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="0" />
                <Setter Property="Foreground" Value="{DynamicResource Unicolor_Text}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseContextMenuStyle" TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="MinWidth" Value="311" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border">
                                <Border Padding="2,8"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="0" />
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="Padding" Value="0,0,5,5" />
                                    <Setter TargetName="Border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="4"
                                                              Opacity="0.8"
                                                              ShadowDepth="2" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource BaseContextMenuStyle}" TargetType="{x:Type ContextMenu}">
                <Setter Property="Foreground" Value="{DynamicResource ContextMenuItemText}" />
                <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorder}" />
            </Style>

            <Style x:Key="BaseSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="8,4,8,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Rectangle Height="1"
                                       HorizontalAlignment="Stretch"
                                       Fill="{TemplateBinding Foreground}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
                   BasedOn="{StaticResource BaseSeparatorStyle}"
                   TargetType="{x:Type Separator}">
                <Setter Property="Foreground" Value="{DynamicResource ContextMenuSeparator}" />
            </Style>

            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border"
                        Height="32"
                        Background="Transparent"
                        BorderThickness="0">
                    <Grid Margin="0,-1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Check"
                                Width="14"
                                Height="14"
                                BorderThickness="1">
                            <TextBlock x:Name="CheckMark"
                                       FontFamily="Segoe MDL2 Assets"
                                       FontSize="12"
                                       Foreground="{DynamicResource ContextMenuItemGlyph}"
                                       SnapsToDevicePixels="False"
                                       Text="&#xE0E7;"
                                       Visibility="Hidden" />
                        </Border>
                        <ContentPresenter x:Name="HeaderHost"
                                          Grid.Column="1"
                                          Margin="0,0,8,0"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ContextMenuItemTextHover}" />
                        <Setter TargetName="CheckMark" Property="Foreground" Value="{DynamicResource ContextMenuItemGlyphHover}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ContextMenuItemTextDisabled}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Style>

            <Style x:Key="ContextMenuDarkOnly"
                   BasedOn="{StaticResource BaseContextMenuStyle}"
                   TargetType="{x:Type ContextMenu}">
                <Setter Property="Foreground" Value="{DynamicResource ContextMenuItemTextDarkOnly}" />
                <Setter Property="Background" Value="{DynamicResource ContextMenuBackgroundDarkOnly}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorderDarkOnly}" />
            </Style>

            <Style x:Key="MenuItemSeparatorDarkOnly"
                   BasedOn="{StaticResource BaseSeparatorStyle}"
                   TargetType="{x:Type Separator}">
                <Setter Property="Foreground" Value="{DynamicResource ContextMenuSeparatorDarkOnly}" />
            </Style>

            <ControlTemplate x:Key="MenuItemTemplateDarkOnly" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border"
                        Height="32"
                        Background="Transparent"
                        BorderThickness="0">
                    <Grid Margin="0,-1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Check"
                                Width="14"
                                Height="14"
                                BorderThickness="1">
                            <TextBlock x:Name="CheckMark"
                                       FontFamily="Segoe MDL2 Assets"
                                       FontSize="12"
                                       Foreground="{DynamicResource ContextMenuItemGlyphDarkOnly}"
                                       SnapsToDevicePixels="False"
                                       Text="&#xE0E7;"
                                       Visibility="Hidden" />
                        </Border>
                        <ContentPresenter x:Name="HeaderHost"
                                          Grid.Column="1"
                                          Margin="0,0,8,0"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />

                        <Border x:Name="OpenGlyph"
                                Grid.Column="2"
                                Width="20"
                                Height="14"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <TextBlock FontFamily="Segoe MDL2 Assets"
                                       FontSize="12"
                                       Foreground="{DynamicResource ContextMenuItemGlyphDarkOnly}"
                                       SnapsToDevicePixels="False"
                                       Text="&#xE0E3;" />
                        </Border>

                        <Popup x:Name="Popup"
                               MinWidth="200"
                               AllowsTransparency="True"
                               Focusable="False"
                               HorizontalOffset="-2"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               Placement="Right"
                               PopupAnimation="Fade">

                            <Border x:Name="SubmenuBorder"
                                    Background="{DynamicResource ContextMenuBackgroundDarkOnly}"
                                    BorderBrush="{DynamicResource ContextMenuBorderDarkOnly}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                <Border Padding="2,6"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHoverDarkOnly}" />
                        <Setter Property="Foreground" Value="{DynamicResource ContextMenuItemTextHoverDarkOnly}" />
                        <Setter TargetName="CheckMark" Property="Foreground" Value="{DynamicResource ContextMenuItemGlyphHoverDarkOnly}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ContextMenuItemTextDisabledDarkOnly}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter TargetName="OpenGlyph" Property="Visibility" Value="Visible" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="MenuItemDarkOnly" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template" Value="{StaticResource MenuItemTemplateDarkOnly}" />
            </Style>

            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="8,0,0,0" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        Width="20"
                                        Height="20"
                                        Margin="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="{DynamicResource CheckBoxBackground}"
                                        BorderBrush="{DynamicResource CheckBoxBorder}"
                                        BorderThickness="2">
                                    <TextBlock x:Name="optionMark"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="16"
                                               Foreground="White"
                                               Opacity="0"
                                               SnapsToDevicePixels="False"
                                               Text="&#xE0E7;" />
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundHover}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundPressed}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderPressed}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundChecked}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderChecked}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundChecked}" />
                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderHover}" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundPressed}" />
                                        <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderPressed}" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="LighOrDark_VolumeSliderTemplate" TargetType="{x:Type Slider}">
                <Grid>
                    <Border Name="TrackBackground" Height="2" />

                    <Track Name="PART_Track">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Name="SliderLeft"
                                          Command="Slider.DecreaseLarge"
                                          Foreground="{DynamicResource Unicolor_SliderTrackLeft}"
                                          Style="{StaticResource SliderButtonStyle}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Name="SliderThumb">
                                <Thumb.Style>
                                    <Style BasedOn="{StaticResource SliderThumbStyle}" TargetType="{x:Type Thumb}">
                                        <Setter Property="Foreground" Value="{DynamicResource LightOrDark_SliderTrackLeft}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_SliderThumbHover}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Name="SliderRight"
                                          Command="Slider.IncreaseLarge"
                                          Foreground="{DynamicResource LightOrDark_SliderTrackRight}"
                                          Style="{StaticResource SliderButtonStyle}" />
                        </Track.IncreaseRepeatButton>
                    </Track>

                    <Border Name="PeakMeter1"
                            Height="2"
                            Margin="0,-2,0,0"
                            HorizontalAlignment="Left"
                            Background="{DynamicResource LightOrDark_PeakMeterColor}" />

                    <Border Name="PeakMeter2"
                            Height="2"
                            Margin="0,1,0,0"
                            HorizontalAlignment="Left"
                            Background="{DynamicResource LightOrDark_PeakMeterColor}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="HeadingText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Margin" Value="0,24,0,18" />
            </Style>

            <Style x:Key="BodyText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="BodySubText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,16,0" />
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_SecondaryText}" />
            </Style>

            <Style x:Key="HyperlinkBlock" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Margin" Value="0,6,0,6" />
            </Style>

            <Style TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource HyperlinkTextForegroundHover}" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Foreground" Value="{DynamicResource HyperlinkTextForeground}" />
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
            </Style>

            <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
                <views:SettingsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:AppItemViewModel}">
                <views:AppItemView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TemporaryAppItemViewModel}">
                <views:AppItemView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:HotkeySelectViewModel}">
                <views:HotkeySelectView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:AddonManagerViewModel}">
                <views:AddonManagerView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:FocusedAppItemViewModel}">
                <views:ModalDialogChrome>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ListView Margin="{StaticResource VolumeAppListMargin}"
                                  VerticalAlignment="Center"
                                  FocusVisualStyle="{x:Null}"
                                  ItemsSource="{Binding App.ChildApps, Mode=OneWay}"
                                  ScrollViewer.CanContentScroll="True"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" />

                        <ItemsControl Grid.Row="1" ItemsSource="{Binding Addons}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </views:ModalDialogChrome>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:FocusedDeviceViewModel}">
                <views:ModalDialogChrome>
                    <ItemsControl ItemsSource="{Binding Addons}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </views:ModalDialogChrome>
            </DataTemplate>
            <DataTemplate x:Key="ContextMenuItemTemplate">
                <MenuItem Command="{Binding Command}"
                          Header="{Binding DisplayName}"
                          IsCheckable="{Binding IsChecked}"
                          IsChecked="{Binding IsChecked}"
                          IsEnabled="{Binding IsEnabled}" />
            </DataTemplate>
            <HierarchicalDataTemplate x:Key="ContextMenuSubItemTemplate" ItemsSource="{Binding Children}">
                <MenuItem Command="{Binding Command}"
                          Header="{Binding DisplayName}"
                          ItemContainerTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=ItemContainerTemplateSelector}"
                          UsesItemContainerTemplate="true" />
            </HierarchicalDataTemplate>
            <DataTemplate x:Key="ContextMenuSeparatorTemplate">
                <Separator />
            </DataTemplate>
            <DataTemplate x:Key="ContextMenuItemTemplateDarkOnly">
                <MenuItem Command="{Binding Command}"
                          Header="{Binding DisplayName}"
                          IsCheckable="{Binding IsChecked}"
                          IsChecked="{Binding IsChecked}"
                          IsEnabled="{Binding IsEnabled}"
                          Style="{StaticResource MenuItemDarkOnly}" />
            </DataTemplate>
            <HierarchicalDataTemplate x:Key="ContextMenuSubItemTemplateDarkOnly" ItemsSource="{Binding Children}">
                <MenuItem Command="{Binding Command}"
                          Header="{Binding DisplayName}"
                          ItemContainerTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=ItemContainerTemplateSelector}"
                          ItemsSource="{Binding Children}"
                          Style="{StaticResource MenuItemDarkOnly}"
                          UsesItemContainerTemplate="true" />
            </HierarchicalDataTemplate>
            <DataTemplate x:Key="ContextMenuSeparatorTemplateDarkOnly">
                <Separator Style="{StaticResource MenuItemSeparatorDarkOnly}" />
            </DataTemplate>

            <Style x:Key="SettingsListViewItem" TargetType="{x:Type ListViewItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PanelBackgroundHover}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PanelBackgroundSelected}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SettingsListView" TargetType="{x:Type ListView}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource SettingsListViewItem}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    Background="{DynamicResource ComboBox.Static.Background}"
                                    BorderBrush="{DynamicResource ComboBox.Static.Border}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Border x:Name="splitBorder"
                                        Margin="0"
                                        HorizontalAlignment="Right"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="true">

                                    <TextBlock Name="arrow"
                                               Margin="0,0,6,0"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="12"
                                               Foreground="{DynamicResource ComboBox.Static.Glyph}"
                                               Text="&#xE011;" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource ComboBox.MouseOver.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource ComboBox.MouseOver.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource ComboBox.MouseOver.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource ComboBox.Pressed.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource ComboBox.Pressed.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource ComboBox.Pressed.Border}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           Grid.ColumnSpan="2"
                           Margin="1"
                           AllowsTransparency="true"
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Grid x:Name="shadow"
                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                              Background="Transparent">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource ContextMenuBackground}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled"
                                          TextElement.Foreground="{DynamicResource ContextMenuItemText}">
                                        <Canvas x:Name="canvas"
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                            <Rectangle x:Name="opaqueRect"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Grid.ColumnSpan="2"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <ContentPresenter x:Name="contentPresenter"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      IsHitTestVisible="false"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />

                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
                <Setter Property="Width" Value="280" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="Padding" Value="12,4,12,7" />
                <Setter Property="Margin" Value="0,6" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="TextElement.FontSize" Value="16" />
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            </Style>

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="12" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsKeyboardFocused" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ContextMenuItemTextHover}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ContextMenuItemTextHover}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ContextMenuItemTextHover}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsKeyboardFocused" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ContextMenuItemTextHover}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ContextMenuItemTextHover}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource LightOrDark_Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
                <Setter Property="SelectionBrush" Value="{DynamicResource LightOrDark_ActiveWindowBorder}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="Margin" Value="0,6" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderHover}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightOrDark_ActiveWindowBorder}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Padding" Value="0,12,12,12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Name="root" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid>
                                    <Rectangle Width="40"
                                               Height="40"
                                               Margin="12"
                                               Fill="{DynamicResource ButtonBackground}" />

                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="15"
                                               Text="&#xE109;" />
                                </Grid>

                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="root" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
